#!/bin/bash
# === BDP1 - SCRIPT UNIFICATO COMPLETO ===
# Autore: Martina (con guida BDP1)
# Obiettivo: installazione e gestione ambiente cloud + NFS + HTCondor + Docker + udocker

# 0. INSTALLAZIONE DI UDOCKER (per ambienti user senza privilegi root)
echo "[0/7] Installazione udocker per ambienti user..."
curl https://raw.githubusercontent.com/indigo-dc/udocker/master/udocker.py > udocker
chmod u+x udocker
./udocker install

# 1. PROMPT COLORATO E PERSONALIZZATO
echo "[1/7] Personalizzazione del prompt..."
echo "export PS1='[\\u@\\h \\W]\\$ '" >> ~/.bashrc
source ~/.bashrc

# 2. ATTACCO DI UN VOLUME ESISTENTE (SNAPSHOT AWS)
echo "[2/7] Attacco volume..."
mkdir -p /data
mount /dev/xvdf1 /data
echo '/dev/xvdf1 /data ext4 defaults,nofail 0 2' >> /etc/fstab

# 3. INSTALLAZIONE NFS (SERVER O CLIENT)
echo "[3/7] Installazione NFS..."
apt update && apt install -y nfs-kernel-server nfs-common
mkdir -p /mnt/nfs_share
chmod 777 /mnt/nfs_share
echo "/mnt/nfs_share *(rw,sync,no_subtree_check)" >> /etc/exports
exportfs -a
systemctl restart nfs-kernel-server

# 4. INSTALLAZIONE DI HTCondor (sistema batch)
echo "[4/7] Installazione HTCondor..."
wget https://research.cs.wisc.edu/htcondor/repo/keys/HTCondor-Release.pub
apt-key add HTCondor-Release.pub
echo "deb http://research.cs.wisc.edu/htcondor/debian/stable bullseye contrib" >> /etc/apt/sources.list
apt update && apt install -y htcondor

# 5. CREAZIONE E SUBMISSION DI UN JOB CON HTCondor
echo "[5/7] Creazione job Condor..."
cat <<EOF > align.job
executable = /usr/bin/python3
arguments = align.py input.fastq
output = log.out
error = log.err
log = condor.log
queue
EOF
condor_submit align.job

# 6. INSTALLAZIONE E USO DI DOCKER
echo "[6/7] Installazione Docker..."
apt update && apt install -y docker.io
systemctl start docker
systemctl enable docker

# Dockerfile base per allineamento
echo "[6.1] Dockerfile e build immagine..."
cat <<EOF > Dockerfile
FROM ubuntu:20.04
RUN apt update && apt install -y bwa python3
COPY align.py /opt/
ENTRYPOINT ["python3", "/opt/align.py"]
EOF

docker build -t bioalign:v1 .

# 7. TRASFERIMENTO DATI CON RSYNC
echo "[7/7] Trasferimento dati via rsync..."
rsync -avz /mnt/nfs_share/ user@remote:/path/destination/

echo "SCRIPT COMPLETATO"
